//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_ClinicaDental
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClinicaDental_DBEntities : DbContext
    {
        public ClinicaDental_DBEntities()
            : base("name=ClinicaDental_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Dentista> Dentista { get; set; }
        public virtual DbSet<Disponibilidad> Disponibilidad { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Historia> Historia { get; set; }
        public virtual DbSet<HorarioDentista> HorarioDentista { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<Pago> Pago { get; set; }
        public virtual DbSet<Tratamiento> Tratamiento { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int sp_ActualizarDentista(Nullable<int> idDentista, string dni, string correo, string contraseña, string nombres, string apellidos, string telefono, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<int> sexo, Nullable<int> estado, Nullable<int> especialidad)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("especialidad", especialidad) :
                new ObjectParameter("especialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarDentista", idDentistaParameter, dniParameter, correoParameter, contraseñaParameter, nombresParameter, apellidosParameter, telefonoParameter, fechaNacimientoParameter, direccionParameter, sexoParameter, estadoParameter, especialidadParameter);
        }
    
        public virtual int sp_ActualizarEstadoCita(Nullable<int> idCita, Nullable<int> nuevoEstado)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("idCita", idCita) :
                new ObjectParameter("idCita", typeof(int));
    
            var nuevoEstadoParameter = nuevoEstado.HasValue ?
                new ObjectParameter("nuevoEstado", nuevoEstado) :
                new ObjectParameter("nuevoEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarEstadoCita", idCitaParameter, nuevoEstadoParameter);
        }
    
        public virtual int sp_ActualizarHistoriaClinica(Nullable<int> idHistoria, string descripcion, string observaciones, Nullable<int> idTratamiento)
        {
            var idHistoriaParameter = idHistoria.HasValue ?
                new ObjectParameter("idHistoria", idHistoria) :
                new ObjectParameter("idHistoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var idTratamientoParameter = idTratamiento.HasValue ?
                new ObjectParameter("idTratamiento", idTratamiento) :
                new ObjectParameter("idTratamiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarHistoriaClinica", idHistoriaParameter, descripcionParameter, observacionesParameter, idTratamientoParameter);
        }
    
        public virtual int sp_ActualizarPaciente(Nullable<int> idPaciente, string dni, string correo, string contraseña, string nombres, string apellidos, string telefono, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<int> sexo, Nullable<int> estado)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarPaciente", idPacienteParameter, dniParameter, correoParameter, contraseñaParameter, nombresParameter, apellidosParameter, telefonoParameter, fechaNacimientoParameter, direccionParameter, sexoParameter, estadoParameter);
        }
    
        public virtual int sp_AgregarAdmin(string dni, string correo, string contraseña, string nombres, string apellidos, string telefono, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<int> sexo, Nullable<int> estado)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarAdmin", dniParameter, correoParameter, contraseñaParameter, nombresParameter, apellidosParameter, telefonoParameter, fechaNacimientoParameter, direccionParameter, sexoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<string> sp_AgregarCita(Nullable<int> idPaciente, Nullable<int> idDentista, Nullable<System.DateTime> fechaCita, Nullable<System.TimeSpan> horaCita, string motivoCita)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaCitaParameter = fechaCita.HasValue ?
                new ObjectParameter("fechaCita", fechaCita) :
                new ObjectParameter("fechaCita", typeof(System.DateTime));
    
            var horaCitaParameter = horaCita.HasValue ?
                new ObjectParameter("horaCita", horaCita) :
                new ObjectParameter("horaCita", typeof(System.TimeSpan));
    
            var motivoCitaParameter = motivoCita != null ?
                new ObjectParameter("motivoCita", motivoCita) :
                new ObjectParameter("motivoCita", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_AgregarCita", idPacienteParameter, idDentistaParameter, fechaCitaParameter, horaCitaParameter, motivoCitaParameter);
        }
    
        public virtual int sp_AgregarDentista(string dni, string correo, string contraseña, string nombres, string apellidos, string telefono, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<int> sexo, Nullable<int> especialidad, Nullable<int> estado)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("especialidad", especialidad) :
                new ObjectParameter("especialidad", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarDentista", dniParameter, correoParameter, contraseñaParameter, nombresParameter, apellidosParameter, telefonoParameter, fechaNacimientoParameter, direccionParameter, sexoParameter, especialidadParameter, estadoParameter);
        }
    
        public virtual int sp_AgregarEspecialidad(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarEspecialidad", nombreParameter, descripcionParameter);
        }
    
        public virtual int sp_AgregarHistoriaClinica(Nullable<int> idPaciente, Nullable<int> idDentista, Nullable<int> idTratamiento, Nullable<int> idCita, string descripcion, string observaciones)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var idTratamientoParameter = idTratamiento.HasValue ?
                new ObjectParameter("idTratamiento", idTratamiento) :
                new ObjectParameter("idTratamiento", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("idCita", idCita) :
                new ObjectParameter("idCita", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarHistoriaClinica", idPacienteParameter, idDentistaParameter, idTratamientoParameter, idCitaParameter, descripcionParameter, observacionesParameter);
        }
    
        public virtual int sp_AgregarHorarioDentista(Nullable<int> idDentista, string diaSemana, Nullable<System.TimeSpan> horaInicio, Nullable<System.TimeSpan> horaFin, Nullable<int> mesObjetivo, Nullable<int> anioObjetivo)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var diaSemanaParameter = diaSemana != null ?
                new ObjectParameter("diaSemana", diaSemana) :
                new ObjectParameter("diaSemana", typeof(string));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("horaInicio", horaInicio) :
                new ObjectParameter("horaInicio", typeof(System.TimeSpan));
    
            var horaFinParameter = horaFin.HasValue ?
                new ObjectParameter("horaFin", horaFin) :
                new ObjectParameter("horaFin", typeof(System.TimeSpan));
    
            var mesObjetivoParameter = mesObjetivo.HasValue ?
                new ObjectParameter("mesObjetivo", mesObjetivo) :
                new ObjectParameter("mesObjetivo", typeof(int));
    
            var anioObjetivoParameter = anioObjetivo.HasValue ?
                new ObjectParameter("anioObjetivo", anioObjetivo) :
                new ObjectParameter("anioObjetivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarHorarioDentista", idDentistaParameter, diaSemanaParameter, horaInicioParameter, horaFinParameter, mesObjetivoParameter, anioObjetivoParameter);
        }
    
        public virtual int sp_AgregarPaciente(string dni, string correo, string contraseña, string nombres, string apellidos, string telefono, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<int> sexo, Nullable<int> estado)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarPaciente", dniParameter, correoParameter, contraseñaParameter, nombresParameter, apellidosParameter, telefonoParameter, fechaNacimientoParameter, direccionParameter, sexoParameter, estadoParameter);
        }
    
        public virtual int sp_AgregarRecepcionista(string dni, string correo, string contraseña, string nombres, string apellidos, string telefono, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<int> sexo, Nullable<int> estado)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarRecepcionista", dniParameter, correoParameter, contraseñaParameter, nombresParameter, apellidosParameter, telefonoParameter, fechaNacimientoParameter, direccionParameter, sexoParameter, estadoParameter);
        }
    
        public virtual int sp_AgregarTratamiento(string nombre, string descripcion, Nullable<decimal> precio)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AgregarTratamiento", nombreParameter, descripcionParameter, precioParameter);
        }
    
        public virtual int sp_CancelarCita(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("idCita", idCita) :
                new ObjectParameter("idCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CancelarCita", idCitaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarCitas_Result> sp_ConsultarCitas(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarCitas_Result>("sp_ConsultarCitas", idPacienteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarDentista_Result> sp_ConsultarDentista(Nullable<int> idDentista)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarDentista_Result>("sp_ConsultarDentista", idDentistaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarDisponibilidad_Result> sp_ConsultarDisponibilidad(Nullable<int> idDentista, Nullable<System.DateTime> fecha)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarDisponibilidad_Result>("sp_ConsultarDisponibilidad", idDentistaParameter, fechaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarDisponibilidadDetallada_Result> sp_ConsultarDisponibilidadDetallada(Nullable<int> idDentista)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarDisponibilidadDetallada_Result>("sp_ConsultarDisponibilidadDetallada", idDentistaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarHistoriaClinica_Result> sp_ConsultarHistoriaClinica(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarHistoriaClinica_Result>("sp_ConsultarHistoriaClinica", idPacienteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarHistoriaClinicaPorCita_Result> sp_ConsultarHistoriaClinicaPorCita(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("idCita", idCita) :
                new ObjectParameter("idCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarHistoriaClinicaPorCita_Result>("sp_ConsultarHistoriaClinicaPorCita", idCitaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarPaciente_Result> sp_ConsultarPaciente(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarPaciente_Result>("sp_ConsultarPaciente", idPacienteParameter);
        }
    
        public virtual int sp_EliminarDentista(Nullable<int> idDentista)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarDentista", idDentistaParameter);
        }
    
        public virtual int sp_EliminarDisponibilidadDentista(Nullable<int> idDentista, Nullable<System.DateTime> fecha, Nullable<System.TimeSpan> hora, string motivo)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.TimeSpan));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarDisponibilidadDentista", idDentistaParameter, fechaParameter, horaParameter, motivoParameter);
        }
    
        public virtual int sp_EliminarDisponibilidadDia(Nullable<int> idDentista, Nullable<System.DateTime> fecha, string motivo)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarDisponibilidadDia", idDentistaParameter, fechaParameter, motivoParameter);
        }
    
        public virtual int sp_EliminarHorarioDentistaDia(Nullable<int> idDentista, Nullable<System.DateTime> fecha)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarHorarioDentistaDia", idDentistaParameter, fechaParameter);
        }
    
        public virtual int sp_EliminarHorarioDentistaHora(Nullable<int> idDentista, Nullable<System.DateTime> fecha, Nullable<System.TimeSpan> hora)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarHorarioDentistaHora", idDentistaParameter, fechaParameter, horaParameter);
        }
    
        public virtual int sp_EliminarPaciente(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarPaciente", idPacienteParameter);
        }
    
        public virtual ObjectResult<sp_ListarCitasPorDentistaYFecha_Result> sp_ListarCitasPorDentistaYFecha(Nullable<int> idDentista, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarCitasPorDentistaYFecha_Result>("sp_ListarCitasPorDentistaYFecha", idDentistaParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<sp_ListarDentistas_Result> sp_ListarDentistas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarDentistas_Result>("sp_ListarDentistas");
        }
    
        public virtual ObjectResult<sp_ListarDentistasPorEspecialidadDetallado_Result> sp_ListarDentistasPorEspecialidadDetallado(Nullable<int> idEspecialidad)
        {
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("idEspecialidad", idEspecialidad) :
                new ObjectParameter("idEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarDentistasPorEspecialidadDetallado_Result>("sp_ListarDentistasPorEspecialidadDetallado", idEspecialidadParameter);
        }
    
        public virtual ObjectResult<sp_ListarEspecialidades_Result> sp_ListarEspecialidades()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarEspecialidades_Result>("sp_ListarEspecialidades");
        }
    
        public virtual ObjectResult<sp_ListarPacientes_Result> sp_ListarPacientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarPacientes_Result>("sp_ListarPacientes");
        }
    
        public virtual ObjectResult<sp_ListarTratamientos_Result> sp_ListarTratamientos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarTratamientos_Result>("sp_ListarTratamientos");
        }
    
        public virtual ObjectResult<string> sp_LoginPaciente(string dni, string contraseña)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_LoginPaciente", dniParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerCalendarioDisponible_Result> sp_ObtenerCalendarioDisponible(Nullable<int> idDentista, Nullable<System.DateTime> fechaInicio)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerCalendarioDisponible_Result>("sp_ObtenerCalendarioDisponible", idDentistaParameter, fechaInicioParameter);
        }
    
        public virtual int sp_ObtenerCalendarioSemanal(Nullable<System.DateTime> fechaInicio, Nullable<int> idDentista)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ObtenerCalendarioSemanal", fechaInicioParameter, idDentistaParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerHorarioDentista_Result> sp_ObtenerHorarioDentista(Nullable<int> idDentista, Nullable<System.DateTime> fechaInicio)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerHorarioDentista_Result>("sp_ObtenerHorarioDentista", idDentistaParameter, fechaInicioParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerHorarioDetallado_Result> sp_ObtenerHorarioDetallado(Nullable<int> idDentista, Nullable<System.DateTime> fechaInicio)
        {
            var idDentistaParameter = idDentista.HasValue ?
                new ObjectParameter("idDentista", idDentista) :
                new ObjectParameter("idDentista", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerHorarioDetallado_Result>("sp_ObtenerHorarioDetallado", idDentistaParameter, fechaInicioParameter);
        }
    
        public virtual int sp_RegistrarPago(Nullable<int> idPaciente, Nullable<decimal> monto, string metodoPago)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("idPaciente", idPaciente) :
                new ObjectParameter("idPaciente", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            var metodoPagoParameter = metodoPago != null ?
                new ObjectParameter("metodoPago", metodoPago) :
                new ObjectParameter("metodoPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarPago", idPacienteParameter, montoParameter, metodoPagoParameter);
        }
    }
}
